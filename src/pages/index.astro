---
import DefaultLayout from '../layouts/DefaultLayout.astro';
import {format} from 'date-fns';
import {getCollection} from "astro:content";
import EventGrid from "../components/EventGrid.astro";

const allEvents = await getCollection("events");

const getDaysArray = function (start: Date, end: Date) {
    const dayArray = [];
    for (const day = new Date(start); day <= new Date(end); day.setDate(day.getDate() + 1)) {
        dayArray.push(new Date(day));
    }
    return dayArray;
};

const bvwDates = getDaysArray(new Date("2025-08-09"), new Date("2025-08-17"));

function getEventsOnDay(day: Date) {
    let eventsOnDay :any[] = [];
    allEvents.forEach(event => {
        if (format(event.data.start, 'yyyyMMdd') == format(day, 'yyyyMMdd')) {
            eventsOnDay.push(event);
        }
    })
    return eventsOnDay;
}
---

<DefaultLayout>
    <h1 style="text-align: center">THIS IS THE TEST SITE FOR BALLATER VICTORIA WEEK</h1>
    <div id='eventsByDays'>
        {bvwDates.map((day: any) =>
                <h1 class="eventDay">{format(day, 'E do')}</h1>

                <EventGrid gridId={format(day, 'Edo')} eventList={getEventsOnDay(day)}/>
        )}
    </div>
    <!-- <EventGrid gridId="aaa" eventList={allEvents}/> -->
    <script>
        function recalculateReadMoreButtons() {
            const eventBoxes = document.getElementsByClassName("eventBox")
            for (let eventBox of eventBoxes) {
                const eventText = eventBox.getElementsByClassName("eventText")[0] as HTMLElement;
                const readMore = eventBox.getElementsByClassName("readMore")[0] as HTMLElement;
                const eventTextIsOverflowing = eventText.scrollHeight > eventText.clientHeight;
                readMore.hidden = !eventTextIsOverflowing;
            }
        }
        window.addEventListener('resize', recalculateReadMoreButtons);
        recalculateReadMoreButtons()
    </script>
</DefaultLayout>

<style>
    .eventDay {
        text-align: center;
    }

    #eventsByDays {
        display: flex;
        flex-direction: column;
    }

</style>